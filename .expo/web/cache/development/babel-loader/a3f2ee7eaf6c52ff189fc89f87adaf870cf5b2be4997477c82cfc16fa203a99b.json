{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React from \"react\";\nimport styles from \"./slides.style\";\nimport { HeightSpacer, ReusableBtn, ReusableText } from \"../../components/index\";\nimport { COLORS, SIZES } from \"../../constants/theme\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Slides = function Slides(_ref) {\n  var item = _ref.item;\n  var navigation = useNavigation();\n  var handlePress = function handlePress() {\n    firstRun();\n    navigation.navigate('Bottom');\n  };\n  var firstRun = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      yield AsyncStorage.setItem('first', 'false');\n    });\n    return function firstRun() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    children: [_jsx(Image, {\n      source: item.image,\n      style: styles.image\n    }), _jsxs(View, {\n      style: styles.stack,\n      children: [_jsx(ReusableText, {\n        text: item.title,\n        family: \"medium\",\n        size: SIZES.xxLarge,\n        color: COLORS.white\n      }), _jsx(HeightSpacer, {\n        height: 40\n      }), _jsx(ReusableBtn, {\n        onPress: handlePress,\n        btnText: \"Let's go\",\n        width: (SIZES.width - 50) / 2.2,\n        backgroundColor: COLORS.red,\n        borderColor: COLORS.red,\n        borderWidth: 0,\n        textColor: COLORS.white\n      })]\n    })]\n  });\n};\nexport default Slides;","map":{"version":3,"names":["React","styles","HeightSpacer","ReusableBtn","ReusableText","COLORS","SIZES","useNavigation","AsyncStorage","jsx","_jsx","jsxs","_jsxs","Slides","_ref","item","navigation","handlePress","firstRun","navigate","_ref2","_asyncToGenerator","setItem","apply","arguments","View","children","Image","source","image","style","stack","text","title","family","size","xxLarge","color","white","height","onPress","btnText","width","backgroundColor","red","borderColor","borderWidth","textColor"],"sources":["C:/Users/nishchal/Documents/github/native_travel_app_frontend/components/Onboard/Slides.jsx"],"sourcesContent":["import { View, Image } from \"react-native\";\nimport React from \"react\";\nimport styles from \"./slides.style\";\nimport {\n  HeightSpacer,\n  ReusableBtn,\n  ReusableText,\n} from \"../../components/index\";\nimport { COLORS, SIZES } from \"../../constants/theme\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst Slides = ({ item }) => {\n  const navigation = useNavigation();\n\nconst handlePress =() => {\n  firstRun();\n  navigation.navigate('Bottom')\n}\n\n  const firstRun = async () => {\n    await AsyncStorage.setItem('first', 'false')\n}\n\n  return (\n    <View>\n      <Image source={item.image} style={styles.image} />\n\n      <View style={styles.stack}>\n        <ReusableText\n          text={item.title}\n          family={\"medium\"}\n          size={SIZES.xxLarge}\n          color={COLORS.white}\n        />\n\n        <HeightSpacer height={40} />\n\n        <ReusableBtn\n          onPress={handlePress}\n          btnText={\"Let's go\"}\n          width={(SIZES.width - 50) / 2.2}\n          backgroundColor={COLORS.red}\n          borderColor={COLORS.red}\n          borderWidth={0}\n          textColor={COLORS.white}\n        />\n\n       \n      </View>\n    </View>\n  );\n};\n\nexport default Slides;\n"],"mappings":";;;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM;AACb,SACEC,YAAY,EACZC,WAAW,EACXC,YAAY;AAEd,SAASC,MAAM,EAAEC,KAAK;AACtB,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,YAAY,MAAM,2CAA2C;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErE,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAAC,IAAA,EAAiB;EAAA,IAAXC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EACpB,IAAMC,UAAU,GAAGT,aAAa,CAAC,CAAC;EAEpC,IAAMU,WAAW,GAAE,SAAbA,WAAWA,CAAA,EAAQ;IACvBC,QAAQ,CAAC,CAAC;IACVF,UAAU,CAACG,QAAQ,CAAC,QAAQ,CAAC;EAC/B,CAAC;EAEC,IAAMD,QAAQ;IAAA,IAAAE,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAC3B,MAAMb,YAAY,CAACc,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC;IAChD,CAAC;IAAA,gBAFOJ,QAAQA,CAAA;MAAA,OAAAE,KAAA,CAAAG,KAAA,OAAAC,SAAA;IAAA;EAAA,GAEf;EAEC,OACEZ,KAAA,CAACa,IAAI;IAAAC,QAAA,GACHhB,IAAA,CAACiB,KAAK;MAACC,MAAM,EAAEb,IAAI,CAACc,KAAM;MAACC,KAAK,EAAE7B,MAAM,CAAC4B;IAAM,CAAE,CAAC,EAElDjB,KAAA,CAACa,IAAI;MAACK,KAAK,EAAE7B,MAAM,CAAC8B,KAAM;MAAAL,QAAA,GACxBhB,IAAA,CAACN,YAAY;QACX4B,IAAI,EAAEjB,IAAI,CAACkB,KAAM;QACjBC,MAAM,EAAE,QAAS;QACjBC,IAAI,EAAE7B,KAAK,CAAC8B,OAAQ;QACpBC,KAAK,EAAEhC,MAAM,CAACiC;MAAM,CACrB,CAAC,EAEF5B,IAAA,CAACR,YAAY;QAACqC,MAAM,EAAE;MAAG,CAAE,CAAC,EAE5B7B,IAAA,CAACP,WAAW;QACVqC,OAAO,EAAEvB,WAAY;QACrBwB,OAAO,EAAE,UAAW;QACpBC,KAAK,EAAE,CAACpC,KAAK,CAACoC,KAAK,GAAG,EAAE,IAAI,GAAI;QAChCC,eAAe,EAAEtC,MAAM,CAACuC,GAAI;QAC5BC,WAAW,EAAExC,MAAM,CAACuC,GAAI;QACxBE,WAAW,EAAE,CAAE;QACfC,SAAS,EAAE1C,MAAM,CAACiC;MAAM,CACzB,CAAC;IAAA,CAGE,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,eAAezB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
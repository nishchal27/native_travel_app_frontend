{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useFonts } from 'expo-font';\nimport * as Splashscreen from \"expo-splash-screen\";\nimport { useCallback, useEffect, useState } from 'react';\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Onboarding, Search, CountryDetails, AllReviews, AddReviews, Recommended, PlaceDetails, HotelDetails, HotelList, HotelSearch, SelectRoom, Payments, Settings, SelectedRoom, Successful, Failed, PopularDestinations, PaymentMethod, PopularHotels } from \"./screens\";\nimport BottomTabNavigation from \"./navigation/BottomTabNavigation\";\nimport AuthTopTab from \"./navigation/AuthTopTab\";\nimport { StatusBar } from 'expo-status-bar';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport AddCard from \"./screens/setttings/AddCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    firstLaunch = _useState2[0],\n    setFirstLaunch = _useState2[1];\n  var appFirstLaunch = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var onboarding = yield AsyncStorage.getItem('first');\n      if (onboarding !== null) {\n        setFirstLaunch(false);\n      } else {\n        setFirstLaunch(true);\n      }\n    });\n    return function appFirstLaunch() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    appFirstLaunch();\n  }, []);\n  var _useFonts = useFonts({\n      regular: require(\"./assets/fonts/regular.otf\"),\n      medium: require(\"./assets/fonts/medium.otf\"),\n      bold: require(\"./assets/fonts/bold.otf\"),\n      light: require(\"./assets/fonts/light.otf\"),\n      xtrabold: require(\"./assets/fonts/xtrabold.otf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var onLayoutRootView = useCallback(_asyncToGenerator(function* () {\n    if (fontsLoaded) {\n      yield Splashscreen.hideAsync();\n    }\n  }), [fontsLoaded]);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsxs(NavigationContainer, {\n    children: [_jsx(StatusBar, {}), _jsxs(Stack.Navigator, {\n      children: [firstLaunch && _jsx(Stack.Screen, {\n        name: \"Onboard\",\n        component: Onboarding,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Bottom\",\n        component: BottomTabNavigation,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Search\",\n        component: Search,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"CountryDetails\",\n        component: CountryDetails,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Recommended\",\n        component: Recommended,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"AddReviews\",\n        component: AddReviews,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"AllReviews\",\n        component: AllReviews,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"PlaceDetails\",\n        component: PlaceDetails,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"HotelDetails\",\n        component: HotelDetails,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"HotelList\",\n        component: HotelList,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"HotelSearch\",\n        component: HotelSearch,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"SelectRoom\",\n        component: SelectRoom,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"PlacesByCountry\",\n        component: PopularDestinations,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Payments\",\n        component: PaymentMethod,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Success\",\n        component: Successful,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"AuthTop\",\n        component: AuthTopTab,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Fail\",\n        component: Failed,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Settings\",\n        component: Settings,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"SelectedRoom\",\n        component: SelectedRoom,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"AddCard\",\n        component: AddCard,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"PopularHotels\",\n        component: PopularHotels,\n        options: {\n          headerShown: false\n        }\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["useFonts","Splashscreen","useCallback","useEffect","useState","NavigationContainer","createNativeStackNavigator","Onboarding","Search","CountryDetails","AllReviews","AddReviews","Recommended","PlaceDetails","HotelDetails","HotelList","HotelSearch","SelectRoom","Payments","Settings","SelectedRoom","Successful","Failed","PopularDestinations","PaymentMethod","PopularHotels","BottomTabNavigation","AuthTopTab","StatusBar","AsyncStorage","AddCard","jsx","_jsx","jsxs","_jsxs","Stack","App","_useState","_useState2","_slicedToArray","firstLaunch","setFirstLaunch","appFirstLaunch","_ref","_asyncToGenerator","onboarding","getItem","apply","arguments","_useFonts","regular","require","medium","bold","light","xtrabold","_useFonts2","fontsLoaded","onLayoutRootView","hideAsync","children","Navigator","Screen","name","component","options","headerShown"],"sources":["C:/Users/nishchal/Documents/github/native_travel_app_frontend/App.js"],"sourcesContent":["\nimport { useFonts } from 'expo-font';\nimport * as Splashscreen from \"expo-splash-screen\";\nimport { useCallback, useEffect, useState } from 'react';\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Onboarding,Search, CountryDetails, AllReviews, AddReviews, Recommended, PlaceDetails, HotelDetails, HotelList, HotelSearch, SelectRoom, Payments, Settings, SelectedRoom, Successful, Failed, PopularDestinations, PaymentMethod, PopularHotels } from './screens';\nimport BottomTabNavigation from './navigation/BottomTabNavigation';\nimport AuthTopTab from './navigation/AuthTopTab';\nimport { StatusBar } from 'expo-status-bar';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport AddCard from './screens/setttings/AddCard';\n\n\n\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  const [firstLaunch, setFirstLaunch] = useState(true);\n\n  const appFirstLaunch = async () => {\n    const onboarding = await AsyncStorage.getItem('first')\n    if(onboarding !== null){\n      setFirstLaunch(false)\n    }else{\n      setFirstLaunch(true)\n    }\n}\n\nuseEffect(() => {\n  appFirstLaunch();\n}, [])\n  const [fontsLoaded] = useFonts({\n    regular: require('./assets/fonts/regular.otf'),\n    medium: require('./assets/fonts/medium.otf'),\n    bold: require('./assets/fonts/bold.otf'),\n    light: require('./assets/fonts/light.otf'),\n    xtrabold: require('./assets/fonts/xtrabold.otf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await Splashscreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n\n\n  return (\n    <NavigationContainer>\n      <StatusBar  />\n      <Stack.Navigator>\n        {firstLaunch && (\n          <Stack.Screen name='Onboard' component={Onboarding} options={{ headerShown: false }} />\n        )}\n        \n        <Stack.Screen name='Bottom' component={BottomTabNavigation} options={{ headerShown: false }} />\n        <Stack.Screen name='Search' component={Search} options={{ headerShown: false }} />\n        <Stack.Screen name='CountryDetails' component={CountryDetails} options={{ headerShown: false }} />\n        <Stack.Screen name='Recommended' component={Recommended} options={{ headerShown: false }} />\n        <Stack.Screen name='AddReviews' component={AddReviews} options={{ headerShown: false }} />\n        <Stack.Screen name='AllReviews' component={AllReviews} options={{ headerShown: false }} />\n        <Stack.Screen name='PlaceDetails' component={PlaceDetails} options={{ headerShown: false }} />\n        <Stack.Screen name='HotelDetails' component={HotelDetails} options={{ headerShown: false }} />\n        <Stack.Screen name='HotelList' component={HotelList} options={{ headerShown: false }} />\n        <Stack.Screen name='HotelSearch' component={HotelSearch} options={{ headerShown: false }} />\n        <Stack.Screen name='SelectRoom' component={SelectRoom} options={{ headerShown: false }} />\n        <Stack.Screen name='PlacesByCountry' component={PopularDestinations} options={{ headerShown: false }} />\n        <Stack.Screen name='Payments' component={PaymentMethod} options={{ headerShown: false }} />\n        <Stack.Screen name='Success' component={Successful} options={{ headerShown: false }} />\n        <Stack.Screen name='AuthTop' component={AuthTopTab} options={{ headerShown: false }} />\n        <Stack.Screen name='Fail' component={Failed} options={{ headerShown: false }} />\n        <Stack.Screen name='Settings' component={Settings} options={{ headerShown: false }} />\n        <Stack.Screen name='SelectedRoom' component={SelectedRoom} options={{ headerShown: false }} />\n        <Stack.Screen name='AddCard' component={AddCard} options={{ headerShown: false }} />\n        <Stack.Screen name='PopularHotels' component={PopularHotels} options={{ headerShown: false }} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
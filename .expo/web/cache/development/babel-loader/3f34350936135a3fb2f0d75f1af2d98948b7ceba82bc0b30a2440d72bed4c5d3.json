{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nvar fetchCountries = function fetchCountries() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    countries = _useState2[0],\n    setCountries = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var fetchData = function () {\n    var _ref = _asyncToGenerator(function* () {\n      setIsLoading(true);\n      try {\n        var response = yield axios.get('nativetravelappbackend-production.up.railway.app/api/countries');\n        setCountries(response.data.countries);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    fetchData();\n  }, []);\n  var refetch = function refetch() {\n    setIsLoading(true);\n    fetchData();\n  };\n  return {\n    countries: countries,\n    isLoading: isLoading,\n    error: error,\n    refetch: refetch\n  };\n};\nexport default fetchCountries;","map":{"version":3,"names":["useState","useEffect","axios","fetchCountries","_useState","_useState2","_slicedToArray","countries","setCountries","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","fetchData","_ref","_asyncToGenerator","response","get","data","apply","arguments","refetch"],"sources":["C:/Users/nishchal/Documents/github/native_travel_app_frontend/hook/fetchCountries.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst fetchCountries = () => {\n    const [countries, setCountries] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null)\n\n\n    const fetchData = async ()=> {\n        setIsLoading(true)\n\n        try {\n            const response = await axios.get('nativetravelappbackend-production.up.railway.app/api/countries');\n\n            setCountries(response.data.countries)\n            setIsLoading(false)\n        } catch (error) {\n           setError(error) \n        } finally{\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        fetchData()\n    }, [])\n\n    const refetch =() => {\n        setIsLoading(true)\n        fetchData();\n    }\n\n\n    return {countries, isLoading, error, refetch}\n}\n\nexport default fetchCountries"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EACzB,IAAAC,SAAA,GAAkCJ,QAAQ,CAAC,EAAE,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAAI,UAAA,GAAkCT,QAAQ,CAAC,KAAK,CAAC;IAAAU,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA1CE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,IAAAG,UAAA,GAA0Bb,QAAQ,CAAC,IAAI,CAAC;IAAAc,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAjCE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAGtB,IAAMG,SAAS;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAW;MACzBP,YAAY,CAAC,IAAI,CAAC;MAElB,IAAI;QACA,IAAMQ,QAAQ,SAASlB,KAAK,CAACmB,GAAG,CAAC,gEAAgE,CAAC;QAElGb,YAAY,CAACY,QAAQ,CAACE,IAAI,CAACf,SAAS,CAAC;QACrCK,YAAY,CAAC,KAAK,CAAC;MACvB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACbC,QAAQ,CAACD,KAAK,CAAC;MAClB,CAAC,SAAQ;QACLH,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC;IAAA,gBAbKK,SAASA,CAAA;MAAA,OAAAC,IAAA,CAAAK,KAAA,OAAAC,SAAA;IAAA;EAAA,GAad;EAEDvB,SAAS,CAAC,YAAM;IACZgB,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMQ,OAAO,GAAE,SAATA,OAAOA,CAAA,EAAQ;IACjBb,YAAY,CAAC,IAAI,CAAC;IAClBK,SAAS,CAAC,CAAC;EACf,CAAC;EAGD,OAAO;IAACV,SAAS,EAATA,SAAS;IAAEI,SAAS,EAATA,SAAS;IAAEI,KAAK,EAALA,KAAK;IAAEU,OAAO,EAAPA;EAAO,CAAC;AACjD,CAAC;AAED,eAAetB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nvar fetchHotelById = function fetchHotelById(id) {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    hotel = _useState2[0],\n    setHotel = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    coordinates = _useState4[0],\n    setCoordinates = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  var fetchData = function () {\n    var _ref = _asyncToGenerator(function* () {\n      setIsLoading(true);\n      try {\n        var response = yield axios.get(`nativetravelappbackend-production.up.railway.app/api/hotels/${id}`);\n        setHotel(response.data);\n        var newData = response.data.coordinates;\n        var coordinate = {\n          id: response.data._id,\n          name: response.data.title,\n          latitude: newData.latitude,\n          longitude: newData.longitude,\n          latitudeDelta: 0.01,\n          longitudeDelta: 0.01\n        };\n        setCoordinates(coordinate);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    fetchData();\n  }, []);\n  var refetch = function refetch() {\n    setIsLoading(true);\n    fetchData();\n  };\n  return {\n    hotel: hotel,\n    coordinates: coordinates,\n    isLoading: isLoading,\n    error: error,\n    refetch: refetch\n  };\n};\nexport default fetchHotelById;","map":{"version":3,"names":["useState","useEffect","axios","fetchHotelById","id","_useState","_useState2","_slicedToArray","hotel","setHotel","_useState3","_useState4","coordinates","setCoordinates","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","error","setError","fetchData","_ref","_asyncToGenerator","response","get","data","newData","coordinate","_id","name","title","latitude","longitude","latitudeDelta","longitudeDelta","apply","arguments","refetch"],"sources":["C:/Users/nishchal/Documents/github/native_travel_app_frontend/hook/fetchHotelById.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst fetchHotelById = (id) => {\n    const [hotel, setHotel] = useState([]);\n    const [coordinates, setCoordinates] = useState()\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null)\n\n\n    const fetchData = async ()=> {\n        setIsLoading(true)\n\n        try {\n            const response = await axios.get(`nativetravelappbackend-production.up.railway.app/api/hotels/${id}`);\n\n            setHotel(response.data)\n            const newData = response.data.coordinates;\n            const coordinate = {\n                id: response.data._id,\n                name: response.data.title,\n                latitude: newData.latitude,\n                longitude: newData.longitude,\n                latitudeDelta: 0.01,\n                longitudeDelta: 0.01\n              }\n              setCoordinates(coordinate)\n            setIsLoading(false)\n        } catch (error) {\n           setError(error) \n        } finally{\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        fetchData()\n    }, [])\n\n    const refetch =() => {\n        setIsLoading(true)\n        fetchData();\n    }\n\n\n    return {hotel,coordinates, isLoading, error, refetch}\n}\n\nexport default fetchHotelById"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,EAAE,EAAK;EAC3B,IAAAC,SAAA,GAA0BL,QAAQ,CAAC,EAAE,CAAC;IAAAM,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAsCV,QAAQ,CAAC,CAAC;IAAAW,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAzCE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAClC,IAAAG,UAAA,GAAkCd,QAAQ,CAAC,KAAK,CAAC;IAAAe,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA1CE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,IAAAG,UAAA,GAA0BlB,QAAQ,CAAC,IAAI,CAAC;IAAAmB,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAAjCE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAGtB,IAAMG,SAAS;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAW;MACzBP,YAAY,CAAC,IAAI,CAAC;MAElB,IAAI;QACA,IAAMQ,QAAQ,SAASvB,KAAK,CAACwB,GAAG,CAAE,+DAA8DtB,EAAG,EAAC,CAAC;QAErGK,QAAQ,CAACgB,QAAQ,CAACE,IAAI,CAAC;QACvB,IAAMC,OAAO,GAAGH,QAAQ,CAACE,IAAI,CAACf,WAAW;QACzC,IAAMiB,UAAU,GAAG;UACfzB,EAAE,EAAEqB,QAAQ,CAACE,IAAI,CAACG,GAAG;UACrBC,IAAI,EAAEN,QAAQ,CAACE,IAAI,CAACK,KAAK;UACzBC,QAAQ,EAAEL,OAAO,CAACK,QAAQ;UAC1BC,SAAS,EAAEN,OAAO,CAACM,SAAS;UAC5BC,aAAa,EAAE,IAAI;UACnBC,cAAc,EAAE;QAClB,CAAC;QACDvB,cAAc,CAACgB,UAAU,CAAC;QAC5BZ,YAAY,CAAC,KAAK,CAAC;MACvB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACbC,QAAQ,CAACD,KAAK,CAAC;MAClB,CAAC,SAAQ;QACLH,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC;IAAA,gBAvBKK,SAASA,CAAA;MAAA,OAAAC,IAAA,CAAAc,KAAA,OAAAC,SAAA;IAAA;EAAA,GAuBd;EAEDrC,SAAS,CAAC,YAAM;IACZqB,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMiB,OAAO,GAAE,SAATA,OAAOA,CAAA,EAAQ;IACjBtB,YAAY,CAAC,IAAI,CAAC;IAClBK,SAAS,CAAC,CAAC;EACf,CAAC;EAGD,OAAO;IAACd,KAAK,EAALA,KAAK;IAACI,WAAW,EAAXA,WAAW;IAAEI,SAAS,EAATA,SAAS;IAAEI,KAAK,EAALA,KAAK;IAAEmB,OAAO,EAAPA;EAAO,CAAC;AACzD,CAAC;AAED,eAAepC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}
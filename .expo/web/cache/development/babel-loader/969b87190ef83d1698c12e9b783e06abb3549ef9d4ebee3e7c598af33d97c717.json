{"ast":null,"code":"import ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from \"react\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { NetworkImage, AppBar, HeightSpacer, ReusableText, DescriptionText, ReusableBtn, PopularList } from \"../../components/index\";\nimport { COLORS, TEXT, SIZES } from \"../../constants/theme\";\nimport reusable from \"../../components/Reusable/reusable.style\";\nimport { Feather } from \"@expo/vector-icons\";\nimport fetchCountry from \"../../hook/fetchCountry\";\nimport Loader from \"../../components/Shimmers/Loader\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CountryDetails = function CountryDetails(_ref) {\n  var navigation = _ref.navigation;\n  var route = useRoute();\n  var id = route.params;\n  var _fetchCountry = fetchCountry(id),\n    country = _fetchCountry.country,\n    isLoading = _fetchCountry.isLoading,\n    error = _fetchCountry.error,\n    refetch = _fetchCountry.refetch;\n  if (isLoading) {\n    return _jsx(Loader, {});\n  }\n  return _jsx(View, {\n    children: _jsxs(ScrollView, {\n      children: [_jsxs(View, {\n        children: [_jsx(NetworkImage, {\n          source: country.imageUrl,\n          width: \"100%\",\n          height: 350,\n          radius: 30\n        }), _jsx(AppBar, {\n          top: 40,\n          left: 20,\n          right: 20,\n          title: country.country,\n          color: COLORS.white,\n          icon: \"search1\",\n          color1: COLORS.white,\n          onPress: function onPress() {\n            return navigation.goBack();\n          },\n          onPress1: function onPress1() {}\n        })]\n      }), _jsxs(View, {\n        style: styles.description,\n        children: [_jsx(ReusableText, {\n          text: country.region,\n          family: \"medium\",\n          size: TEXT.xLarge,\n          color: COLORS.black\n        }), _jsx(DescriptionText, {\n          text: country.description\n        }), _jsxs(View, {\n          style: {\n            alignContent: \"center\"\n          },\n          children: [_jsx(HeightSpacer, {\n            height: 20\n          }), _jsxs(View, {\n            style: reusable.rowWithSpace(\"space-between\"),\n            children: [_jsx(ReusableText, {\n              text: \"Popular Destinations\",\n              family: \"medium\",\n              size: TEXT.large,\n              color: COLORS.black\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return navigation.navigate('PlacesByCountry', id);\n              },\n              children: _jsx(Feather, {\n                name: \"list\",\n                size: 20\n              })\n            })]\n          }), _jsx(HeightSpacer, {\n            height: 20\n          }), _jsx(PopularList, {\n            data: country.popular\n          }), _jsx(ReusableBtn, {\n            onPress: function onPress() {\n              return navigation.navigate(\"HotelSearch\");\n            },\n            btnText: \"Find Best Hotels\",\n            width: SIZES.width - 40,\n            backgroundColor: COLORS.green,\n            borderColor: COLORS.green,\n            borderWidth: 0,\n            textColor: COLORS.white\n          }), _jsx(HeightSpacer, {\n            height: 50\n          })]\n        })]\n      })]\n    })\n  });\n};\nexport default CountryDetails;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#F3F4F8\"\n  },\n  description: {\n    marginHorizontal: 20,\n    paddingTop: 20\n  }\n});","map":{"version":3,"names":["React","useRoute","NetworkImage","AppBar","HeightSpacer","ReusableText","DescriptionText","ReusableBtn","PopularList","COLORS","TEXT","SIZES","reusable","Feather","fetchCountry","Loader","jsx","_jsx","jsxs","_jsxs","CountryDetails","_ref","navigation","route","id","params","_fetchCountry","country","isLoading","error","refetch","View","children","ScrollView","source","imageUrl","width","height","radius","top","left","right","title","color","white","icon","color1","onPress","goBack","onPress1","style","styles","description","text","region","family","size","xLarge","black","alignContent","rowWithSpace","large","TouchableOpacity","navigate","name","data","popular","btnText","backgroundColor","green","borderColor","borderWidth","textColor","StyleSheet","create","container","marginHorizontal","paddingTop"],"sources":["C:/Users/nishchal/Documents/github/native_travel_app_frontend/screens/details/CountryDetails.jsx"],"sourcesContent":["import {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React from \"react\";\nimport { useRoute } from \"@react-navigation/native\";\nimport {\n  NetworkImage,\n  AppBar,\n  HeightSpacer,\n  ReusableText,\n  DescriptionText,\n  ReusableBtn,\n  PopularList,\n} from \"../../components/index\";\nimport { COLORS, TEXT, SIZES } from \"../../constants/theme\";\nimport reusable from \"../../components/Reusable/reusable.style\";\nimport { Feather } from \"@expo/vector-icons\";\nimport fetchCountry from \"../../hook/fetchCountry\";\nimport Loader from \"../../components/Shimmers/Loader\";\n\nconst CountryDetails = ({ navigation }) => {\n  const route = useRoute();\n  const id = route.params;\n  const {country, isLoading, error, refetch} = fetchCountry(id);\n\n  if(isLoading){\n    return <Loader />\n  }\n\n  return (\n    <View>\n \n      <ScrollView>\n      <View>\n        <NetworkImage\n          source={country.imageUrl}\n          width={\"100%\"}\n          height={350}\n          radius={30}\n        />\n\n        <AppBar\n          top={40}\n          left={20}\n          right={20}\n          title={country.country}\n          color={COLORS.white}\n          icon={\"search1\"}\n          color1={COLORS.white}\n          onPress={() => navigation.goBack()}\n          onPress1={() => {}}\n        />\n      </View>\n\n      <View style={styles.description}>\n        <ReusableText\n          text={country.region}\n          family={\"medium\"}\n          size={TEXT.xLarge}\n          color={COLORS.black}\n        />\n\n        <DescriptionText text={country.description} />\n\n        <View style={{ alignContent: \"center\" }}>\n          <HeightSpacer height={20} />\n\n          <View style={reusable.rowWithSpace(\"space-between\")}>\n            <ReusableText\n              text={\"Popular Destinations\"}\n              family={\"medium\"}\n              size={TEXT.large}\n              color={COLORS.black}\n            />\n\n            <TouchableOpacity onPress={() => navigation.navigate('PlacesByCountry', id)}>\n              <Feather name=\"list\" size={20} />\n            </TouchableOpacity>\n          </View>\n\n          <HeightSpacer height={20} />\n\n          <PopularList data={country.popular} />\n\n          <ReusableBtn\n            onPress={() => navigation.navigate(\"HotelSearch\")}\n            btnText={\"Find Best Hotels\"}\n            width={SIZES.width - 40}\n            backgroundColor={COLORS.green}\n            borderColor={COLORS.green}\n            borderWidth={0}\n            textColor={COLORS.white}\n          />\n          <HeightSpacer height={50} />\n        </View>\n      </View>\n    </ScrollView>\n    </View>\n  );\n};\n\nexport default CountryDetails;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#F3F4F8\",\n  },\n  description: {\n    marginHorizontal: 20,\n    paddingTop: 20,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}